#!/bin/bash
#PBS -N HCHRecSNTMP
#PBS -q standard
#PBS -r n
#PBS -l walltime=0:5:0
#PBS -o output/OUT_HCH${VAR1}_gaps-${VAR2}_mS-${VAR3}_mD-${VAR4}_G-${VAR5}_B-${VAR7}_P-${VAR9}_C-${VAR10}_${PBS_JOBID}.txt
#PBS -e output/ERR_HCH${VAR1}_gaps-${VAR2}_mS-${VAR3}_mD-${VAR4}_G-${VAR5}_B-${VAR7}_P-${VAR9}_C-${VAR10}_${PBS_JOBID}.txt

#$VAR1-N, $VAR2-gaps, $VAR3-multimerS, $VAR4-multimerD, $VAR5-growing, $VAR6-iterationsNumber, $VAR7-useSpecificDirectory (UWAGA: NIE 0), $VAR8-MAX(+1)PointNumber(from 0), $VAR9-pointNumber(from 0), $VAR10-lambdaSetIndex


#UWAGA #1: PBS tworzy indywidualny folder tmp dla kazdego zadania
cd $TMPDIR
pwd
echo "==============================="

cp $PBS_O_WORKDIR/program .
cp $PBS_O_WORKDIR/config.txt .
cp $PBS_O_WORKDIR/startArguments.txt .
cp $PBS_O_WORKDIR/lambdaSets.txt .

#UWAGA #2: Mozna do programu zadac jobID rowny np. 'repeats left' (lub 'none' gdy to zwykla rekurencja [a nie onePoint]). Wtedy w przypadku ewentualnej reanimacji powinno byc latwiej (bo: komenda 'sacct' [i podobne], czy nawet zapis w ERR [jezeli akurat powstanie - na co liczyc nie mozna] da co prawda informacje o jobID nieudanego jobu, jednak NIE DA informacji o jobID jobu 'poprzedniego' [z ktorego on korzystal i ktorego znajomosc potrzebna jest do reanimacji]) - nie bedzie trzeba go szukac po folderach indywidualnie dla kazdego reanimowanego jobu.
time ./program 2 $PBS_JOBID $VAR1 $VAR2 $VAR3 $VAR4 $VAR5 $VAR6 $VAR7 0 $VAR9 $VAR10

cp -fr 2D_N-${VAR1}_gaps-${VAR2}_G-${VAR5}_badanie-${VAR7}_mN-6_mS-${VAR3}_mD-${VAR4} $PBS_O_WORKDIR
#UWAGA #3: PBS kasuje po sobie tempa automatycznie
exit 0
